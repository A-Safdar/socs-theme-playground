@using SchoolsSports.Theme.Bundling
@using SchoolsSports.Theme.Themes.SchoolsSports.Components.PageAlerts
@using Volo.Abp.AspNetCore.Mvc.UI.Bundling.TagHelpers
@using Volo.Abp.AspNetCore.Mvc.UI.Components.LayoutHook
@using Volo.Abp.AspNetCore.Mvc.UI.Layout
@using Volo.Abp.AspNetCore.Mvc.UI.Theming
@using Volo.Abp.AspNetCore.Mvc.UI.Widgets.Components.WidgetScripts
@using Volo.Abp.AspNetCore.Mvc.UI.Widgets.Components.WidgetStyles
@using Volo.Abp.Ui.Branding
@using Volo.Abp.Ui.LayoutHooks
@inject IBrandingProvider BrandingProvider
@inject IPageLayout PageLayout

@{
    Layout = null;

    var pageTitle = ViewBag.Title == null ? BrandingProvider.AppName : ViewBag.Title; //TODO: Discard to get from Title

    if (PageLayout.Content.Title != null)
    {
        if (!string.IsNullOrWhiteSpace(pageTitle))
        {
            pageTitle = " | " + pageTitle;
        }

        pageTitle = PageLayout.Content.Title + pageTitle;
    }

    var containerClass = ViewBag.ContainerClass == null ? "container-xxl" : ViewBag.ContainerClass;
}

<!DOCTYPE html>

<html lang="@CultureInfo.CurrentCulture.Name" data-bs-theme="light">
<head>
    @await Component.InvokeLayoutHookAsync(LayoutHooks.Head.First, StandardLayouts.Application)

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <meta http-equiv="X-UA-Compatible" content="ie=edge">

    <title>@pageTitle</title>

    <link rel="icon" type="image/x-icon" href="/favicons/favicon.ico">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicons/favicon-16x16.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicons/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="48x48" href="/favicons/favicon-48x48.png">
    <link rel="manifest" href="/favicons/manifest.webmanifest" crossorigin="use-credentials">

    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Inter:300,400,500,600,700"/>


    @await RenderSectionAsync("styles", false)

    <link href="/themes/schools-sports/plugins/global/plugins.bundle.css" rel="stylesheet" type="text/css"/>
    <link href="/themes/schools-sports/css/style.bundle.css" rel="stylesheet" type="text/css"/>
    <link href="/vendors/fontawesome/css/all.min.css" rel="stylesheet" type="text/css"/>

    <script>    		
    		if (window.top != window.self) { 
				window.top.location.replace(window.self.location.href); 
			}
    </script>

    <abp-style-bundle name="@SchoolsSportsThemeBundles.Styles.Global"/>

    @await Component.InvokeAsync(typeof(WidgetStylesViewComponent))

    @await Component.InvokeLayoutHookAsync(LayoutHooks.Head.Last, StandardLayouts.Application)
    <script type="text/javascript" src="https://platform-api.sharethis.com/js/sharethis.js#property=6564a9d9ecd6570019d86ab8&product=inline-share-buttons&source=platform" async="async"></script>

</head>
<body id="kt_body" class="app-blank">

@await Component.InvokeLayoutHookAsync(LayoutHooks.Body.First, StandardLayouts.Account)
<div class="d-flex flex-column flex-root" id="kt_app_root">
    <div class="d-flex flex-column flex-lg-row flex-column-fluid">
      
        <a href="/" class="d-block d-lg-none mx-auto py-20">
            <img alt="Logo" src="@BrandingProvider.LogoUrl"/>
        </a>
            @(await Component.InvokeAsync<PageAlertsViewComponent>())
            @await Component.InvokeLayoutHookAsync(LayoutHooks.PageContent.First, StandardLayouts.Account)
            @RenderBody()
            @await Component.InvokeLayoutHookAsync(LayoutHooks.PageContent.Last, StandardLayouts.Account)


    </div>
</div>


@await Component.InvokeLayoutHookAsync(LayoutHooks.Body.Last, StandardLayouts.Account)


<script>var hostUrl = "/themes/schools-sports/";</script>
<script src="/themes/schools-sports/plugins/global/plugins.bundle.js"></script>
<script src="/themes/schools-sports/js/scripts.bundle.js"></script>

<abp-script-bundle name="@SchoolsSportsThemeBundles.Scripts.Global"/>

<script src="~/Abp/ApplicationLocalizationScript?cultureName=@CultureInfo.CurrentUICulture.Name"></script>
<script src="~/Abp/ApplicationConfigurationScript"></script>
<script src="~/Abp/ServiceProxyScript"></script>

@await Component.InvokeAsync(typeof(WidgetScriptsViewComponent))

@await RenderSectionAsync("scripts", false)

@await Component.InvokeLayoutHookAsync(LayoutHooks.Body.Last, StandardLayouts.Account)
</body>
</html>
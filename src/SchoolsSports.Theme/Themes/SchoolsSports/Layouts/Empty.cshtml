@using Volo.Abp.AspNetCore.Mvc.UI.Components.LayoutHook
@using Volo.Abp.AspNetCore.Mvc.UI.Layout
@using Volo.Abp.AspNetCore.Mvc.UI.Theming
@using Volo.Abp.AspNetCore.Mvc.UI.Widgets.Components.WidgetScripts
@using Volo.Abp.AspNetCore.Mvc.UI.Widgets.Components.WidgetStyles
@using Volo.Abp.Ui.Branding
@using Volo.Abp.Ui.LayoutHooks
@using SchoolsSports.Theme.Themes.SchoolsSports.Components.PageAlerts
@using SchoolsSports.Theme.Bundling
@using SchoolsSports.Theme.HtmlHelpers
@using Volo.Abp.AspNetCore.Mvc.UI.Bundling.TagHelpers
@inject IBrandingProvider BrandingProvider
@inject IPageLayout PageLayout
@{
    Layout = null;

    var pageTitle = ViewBag.Title == null ? BrandingProvider.AppName : ViewBag.Title; //TODO: Discard to get from Title

    if (PageLayout.Content.Title != null)
    {
        if (!string.IsNullOrWhiteSpace(pageTitle))
        {
            pageTitle = " | " + pageTitle;
        }

        pageTitle = PageLayout.Content.Title + pageTitle;
    }
}

<!DOCTYPE html>

<html lang="@CultureInfo.CurrentCulture.Name">
<head>
    @await Component.InvokeLayoutHookAsync(LayoutHooks.Head.First, StandardLayouts.Empty)

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">

    <title>@pageTitle</title>
    @if (ViewBag.Description != null)
    {
        <meta name="description" content="@ViewBag.Description"/>
    }

    <link rel="icon" type="image/x-icon" href="/themes/schools-sports/favicons/favicon.ico">
    <link rel="icon" type="image/png" sizes="16x16" href="/themes/schools-sports/favicons/favicon-16x16.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/themes/schools-sports/favicons/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="48x48" href="/themes/schools-sports/favicons/favicon-48x48.png">
    <link rel="manifest" href="/themes/schools-sports/favicons/manifest.webmanifest" crossOrigin="use-credentials">
    <meta name="mobile-web-app-capable" content="yes">
    <meta name="theme-color" content="#ffffff">
    <link rel="apple-touch-icon" sizes="57x57" href="/themes/schools-sports/favicons/apple-touch-icon-57x57.png">
    <link rel="apple-touch-icon" sizes="60x60" href="/themes/schools-sports/favicons/apple-touch-icon-60x60.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/themes/schools-sports/favicons/apple-touch-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="76x76" href="/themes/schools-sports/favicons/apple-touch-icon-76x76.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/themes/schools-sports/favicons/apple-touch-icon-114x114.png">
    <link rel="apple-touch-icon" sizes="120x120" href="/themes/schools-sports/favicons/apple-touch-icon-120x120.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/themes/schools-sports/favicons/apple-touch-icon-144x144.png">
    <link rel="apple-touch-icon" sizes="152x152" href="/themes/schools-sports/favicons/apple-touch-icon-152x152.png">
    <link rel="apple-touch-icon" sizes="167x167" href="/themes/schools-sports/favicons/apple-touch-icon-167x167.png">
    <link rel="apple-touch-icon" sizes="180x180" href="/themes/schools-sports/favicons/apple-touch-icon-180x180.png">
    <link rel="apple-touch-icon" sizes="1024x1024" href="/themes/schools-sports/favicons/apple-touch-icon-1024x1024.png">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="msapplication-TileImage" content="/themes/schools-sports/favicons/mstile-144x144.png">
    <meta name="msapplication-config" content="/themes/schools-sports/favicons/browserconfig.xml">


    <link rel="preconnect" href="https://l.sharethis.com">
    <link rel="preconnect" href="https://buttons-config.sharethis.com">
    <link rel="preconnect" href="https://fonts.googleapis.com" crossorigin>

    @await RenderSectionAsync("meta", false)
    @Html.CanonicalUrl()

    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Inter:300,400,500,600,700" media="print" onload="this.onload=null;this.removeAttribute('media');"/>
    <noscript>
        <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Inter:300,400,500,600,700">
    </noscript>

    @await RenderSectionAsync("styles", false)

    <link href="/themes/schools-sports/plugins/global/plugins.bundle.css" rel="stylesheet" type="text/css" media="print" onload="this.onload=null;this.removeAttribute('media');"/>
    <noscript>
        <link href="/themes/schools-sports/plugins/global/plugins.bundle.css" rel="stylesheet" type="text/css"/>
    </noscript>
    <link href="/themes/schools-sports/css/style.bundle.css" rel="stylesheet" type="text/css"/>
    <link href="/vendors/fontawesome/css/all.min.css" rel="stylesheet" type="text/css" media="print" onload="this.onload=null;this.removeAttribute('media');"/>
    <noscript>
        <link href="/vendors/fontawesome/css/all.min.css" rel="stylesheet" type="text/css"/>
    </noscript>

    <script async="async">    		
    		if (window.top != window.self) { 
				window.top.location.replace(window.self.location.href); 
			}
    </script>

    <abp-style-bundle name="@SchoolsSportsThemeBundles.Styles.Global"></abp-style-bundle>

    @await Component.InvokeAsync(typeof(WidgetStylesViewComponent))

    @await Component.InvokeLayoutHookAsync(LayoutHooks.Head.Last, StandardLayouts.Empty)
</head>
<body class="app-blank bgi-size-cover bgi-position-center bgi-no-repeat bg-watermelon">
@await Component.InvokeLayoutHookAsync(LayoutHooks.Body.First, StandardLayouts.Empty)

<div class="d-flex flex-column flex-root">
    @(await Component.InvokeAsync<PageAlertsViewComponent>())
    @await Component.InvokeLayoutHookAsync(LayoutHooks.PageContent.First, StandardLayouts.Empty)
    @RenderBody()
    @await Component.InvokeLayoutHookAsync(LayoutHooks.PageContent.Last, StandardLayouts.Empty)
</div>

<abp-script-bundle name="@SchoolsSportsThemeBundles.Scripts.Global"/>

<script src="~/Abp/ApplicationLocalizationScript?cultureName=@CultureInfo.CurrentUICulture.Name"></script>
<script src="~/Abp/ApplicationConfigurationScript"></script>
<script src="~/Abp/ServiceProxyScript"></script>

@await RenderSectionAsync("scripts", false)

@await Component.InvokeAsync(typeof(WidgetScriptsViewComponent))

@await Component.InvokeLayoutHookAsync(LayoutHooks.Body.Last, StandardLayouts.Empty)
</body>
</html>
@using Localization.Resources.AbpUi
@using Microsoft.AspNetCore.Mvc.Localization
@using SchoolsSports.Theme.HtmlHelpers
@using Volo.Abp.MultiTenancy
@using Volo.Abp.UI.Navigation
@using Volo.Abp.Users
@inject ICurrentUser CurrentUser
@inject ICurrentTenant CurrentTenant
@inject IHtmlLocalizer<AbpUiResource> L
@model ApplicationMenu


<div class="app-navbar-item ms-3 ms-lg-6" id="kt_header_user_menu_toggle">

    <div class="cursor-pointer symbol symbol-35px symbol-lg-45px" data-kt-menu-trigger="{default: 'click', lg: 'hover'}" data-kt-menu-attach="parent" data-kt-menu-placement="bottom-end">
        @Html.GravatarImage(
            @CurrentUser.Email,
            size: 45,
            defaultImage: GravatarHtmlHelper.DefaultImage.Identicon,
            rating: GravatarHtmlHelper.Rating.PG,
            cssClass: "symbol symbol-35px symbol-lg-45px")
    </div>

    <div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-800 menu-state-bg menu-state-color fw-semibold py-4 fs-6 w-275px" data-kt-menu="true">

        <div class="menu-item px-3">
            <div class="menu-content d-flex align-items-center px-3">

                <div class="symbol symbol-50px me-5">
                    @Html.GravatarImage(
                        @CurrentUser.Email,
                        size: 50,
                        defaultImage: GravatarHtmlHelper.DefaultImage.Identicon,
                        rating: GravatarHtmlHelper.Rating.PG)
                </div>


                <div class="d-flex flex-column">
                    <div class="fw-bold d-flex align-items-center fs-5">
                        @CurrentUser.Name
                    </div>
                    @if (CurrentUser.TenantId != null)
                    {
                        <span class="fw-semibold text-muted text-hover-primary fs-7"> @CurrentTenant.Name</span>
                    }
                </div>

            </div>
        </div>


        <div class="separator my-2"></div>


        @if (Model.Items.Any())
        {
            foreach (var group in Model.Groups)
            {
                var menuItems = Model.Items.Where(w=>w.GroupName == group.Name);
                var isLastGroup = Model.Groups.Last().Name == group.Name;
                foreach (var menuItem in menuItems)
                {
                    var elementId = string.IsNullOrEmpty(menuItem.ElementId) ? string.Empty : $"id=\"{menuItem.ElementId}\"";
                    var cssClass = string.IsNullOrEmpty(menuItem.CssClass) ? string.Empty : menuItem.CssClass;
                    var disabled = menuItem.IsDisabled ? "disabled" : string.Empty;
                    var url = string.IsNullOrEmpty(menuItem.Url) ? "#" : Url.Content(menuItem.Url);

                    <div class="menu-item px-5">
                        <a href="@url" target="@menuItem.Target" @Html.Raw(elementId) class="menu-link px-5 @cssClass @disabled">
                            @menuItem.DisplayName
                        </a>
                    </div>
                }
                @if (!isLastGroup)
                {
                    <div class="separator my-2"></div>
                }
            }

        }

    </div>
</div>